{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/Card-list.component.jsx","components/search-box/Search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardListComponent","monsters","map","Search","placeholder","handleChange","type","onChange","fetchData","url","a","fetch","data","json","App","useState","setMonsters","search","setSearch","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","useEffect","then","user","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAYeA,G,YAVF,SAACC,GACV,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCGfC,EAPW,SAACR,GACvB,OACI,qBAAKC,UAAU,YAAf,SACOD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCKjDO,G,MARA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC1B,OACI,qBAAKZ,UAAW,SAAhB,SACI,uBAAOa,KAAK,SAASF,YAAaA,EAAaG,SAAYF,QCDjEG,G,MAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,MAAMF,GADT,cACVG,EADU,gBAEHA,EAAKC,OAFF,mFAAH,uDA2BAC,EApBH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTd,EADS,KACCe,EADD,OAEYD,mBAAS,IAFrB,mBAETE,EAFS,KAEDC,EAFC,KAIVC,EAAmBlB,EAASmB,QAAO,SAAAzB,GAAO,OAAIA,EAAQG,KAAKuB,cAAcC,SAASL,EAAOM,wBAO/F,OALAC,qBAAU,WACRhB,EATQ,8CASOiB,MAAK,SAACC,GAAD,OAAUV,EAAYU,QACzC,IAID,sBAAKjC,UAAY,MAAjB,UACE,kDACA,cAAC,EAAD,CAASW,YAAc,kBAAkBC,aAAgB,SAAAsB,GAAC,OAAIT,EAAUS,EAAEC,OAAOC,UACjF,cAAC,EAAD,CAAmB5B,SAAUkB,QCfpBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAU1BZ,M","file":"static/js/main.5c127490.chunk.js","sourcesContent":["import React from 'react'\nimport \"../card/card.css\"\nconst Card = (props) => {\n    return (\n        <div className = \"card-container\">\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card;\n","import \"../card-list/card-list.css\";\nimport Card from \"../card/Card.component\";\n\nconst CardListComponent = (props) =>{\n    return(\n        <div className=\"card-list\">\n              {props.monsters.map(monster => <Card key={monster.id} monster = {monster}/>)}\n        </div>\n    )\n}\nexport default CardListComponent;","import React from 'react'\nimport \"../search-box/search-box.css\"\n\nconst Search = ({placeholder, handleChange}) => {\n    return (\n        <div className =\"search\">\n            <input type=\"search\" placeholder={placeholder} onChange = {handleChange}/>\n        </div>\n    )\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport CardListComponent from \"./components/card-list/Card-list.component\";\nimport Search from \"./components/search-box/Search-box.component\";\nimport \"./App.css\"\n\nconst fetchData = async (url) => {\n  const data = await fetch(url);\n  return await data.json();\n};\n\nconst URL = \"https://jsonplaceholder.typicode.com/users\";\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(search.toLocaleLowerCase()));\n\n  useEffect(() => {\n    fetchData(URL).then((user) => setMonsters(user));\n  }, []);\n\n  \n  return (\n    <div className = \"App\">\n      <h1>Monsters Rolodex</h1>\n      <Search  placeholder = \"Search monsters\" handleChange = {e => setSearch(e.target.value)}/>\n      <CardListComponent monsters={filteredMonsters} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif(module.hot){\n  module.hot.accept();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}